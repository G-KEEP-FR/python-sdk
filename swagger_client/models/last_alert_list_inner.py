# coding: utf-8

"""
    Gkeep API

    Gkeep API  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class LastAlertListInner(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'frame_id': 'str',
        'version': 'str',
        'sensor': 'object',
        'imei': 'str',
        'import_status': 'int',
        'msg_time': 'int',
        'latitude': 'int',
        'longitude': 'int',
        'co2': 'int',
        'fuel_consumption': 'int',
        'fuel_levels': 'list[float]',
        'aligned_fuel_levels': 'str',
        'fuel_level': 'float',
        'vehicle_id': 'int',
        'vehicle': 'object',
        'driver_id': 'int',
        'is_day_off': 'bool',
        'is_maintenance_enabled': 'bool'
    }

    attribute_map = {
        'id': 'id',
        'frame_id': 'frame_id',
        'version': 'version',
        'sensor': 'sensor',
        'imei': 'imei',
        'import_status': 'import_status',
        'msg_time': 'msg_time',
        'latitude': 'latitude',
        'longitude': 'longitude',
        'co2': 'co2',
        'fuel_consumption': 'fuel_consumption',
        'fuel_levels': 'fuel_levels',
        'aligned_fuel_levels': 'aligned_fuel_levels',
        'fuel_level': 'fuel_level',
        'vehicle_id': 'vehicle_id',
        'vehicle': 'vehicle',
        'driver_id': 'driver_id',
        'is_day_off': 'is_day_off',
        'is_maintenance_enabled': 'is_maintenance_enabled'
    }

    def __init__(self, id=None, frame_id=None, version=None, sensor=None, imei=None, import_status=None, msg_time=None, latitude=None, longitude=None, co2=None, fuel_consumption=None, fuel_levels=None, aligned_fuel_levels=None, fuel_level=None, vehicle_id=None, vehicle=None, driver_id=None, is_day_off=None, is_maintenance_enabled=None):  # noqa: E501
        """LastAlertListInner - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._frame_id = None
        self._version = None
        self._sensor = None
        self._imei = None
        self._import_status = None
        self._msg_time = None
        self._latitude = None
        self._longitude = None
        self._co2 = None
        self._fuel_consumption = None
        self._fuel_levels = None
        self._aligned_fuel_levels = None
        self._fuel_level = None
        self._vehicle_id = None
        self._vehicle = None
        self._driver_id = None
        self._is_day_off = None
        self._is_maintenance_enabled = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if frame_id is not None:
            self.frame_id = frame_id
        if version is not None:
            self.version = version
        if sensor is not None:
            self.sensor = sensor
        if imei is not None:
            self.imei = imei
        if import_status is not None:
            self.import_status = import_status
        if msg_time is not None:
            self.msg_time = msg_time
        if latitude is not None:
            self.latitude = latitude
        if longitude is not None:
            self.longitude = longitude
        if co2 is not None:
            self.co2 = co2
        if fuel_consumption is not None:
            self.fuel_consumption = fuel_consumption
        if fuel_levels is not None:
            self.fuel_levels = fuel_levels
        if aligned_fuel_levels is not None:
            self.aligned_fuel_levels = aligned_fuel_levels
        if fuel_level is not None:
            self.fuel_level = fuel_level
        if vehicle_id is not None:
            self.vehicle_id = vehicle_id
        if vehicle is not None:
            self.vehicle = vehicle
        if driver_id is not None:
            self.driver_id = driver_id
        if is_day_off is not None:
            self.is_day_off = is_day_off
        if is_maintenance_enabled is not None:
            self.is_maintenance_enabled = is_maintenance_enabled

    @property
    def id(self):
        """Gets the id of this LastAlertListInner.  # noqa: E501


        :return: The id of this LastAlertListInner.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LastAlertListInner.


        :param id: The id of this LastAlertListInner.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def frame_id(self):
        """Gets the frame_id of this LastAlertListInner.  # noqa: E501


        :return: The frame_id of this LastAlertListInner.  # noqa: E501
        :rtype: str
        """
        return self._frame_id

    @frame_id.setter
    def frame_id(self, frame_id):
        """Sets the frame_id of this LastAlertListInner.


        :param frame_id: The frame_id of this LastAlertListInner.  # noqa: E501
        :type: str
        """

        self._frame_id = frame_id

    @property
    def version(self):
        """Gets the version of this LastAlertListInner.  # noqa: E501


        :return: The version of this LastAlertListInner.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this LastAlertListInner.


        :param version: The version of this LastAlertListInner.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def sensor(self):
        """Gets the sensor of this LastAlertListInner.  # noqa: E501


        :return: The sensor of this LastAlertListInner.  # noqa: E501
        :rtype: object
        """
        return self._sensor

    @sensor.setter
    def sensor(self, sensor):
        """Sets the sensor of this LastAlertListInner.


        :param sensor: The sensor of this LastAlertListInner.  # noqa: E501
        :type: object
        """

        self._sensor = sensor

    @property
    def imei(self):
        """Gets the imei of this LastAlertListInner.  # noqa: E501


        :return: The imei of this LastAlertListInner.  # noqa: E501
        :rtype: str
        """
        return self._imei

    @imei.setter
    def imei(self, imei):
        """Sets the imei of this LastAlertListInner.


        :param imei: The imei of this LastAlertListInner.  # noqa: E501
        :type: str
        """

        self._imei = imei

    @property
    def import_status(self):
        """Gets the import_status of this LastAlertListInner.  # noqa: E501


        :return: The import_status of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._import_status

    @import_status.setter
    def import_status(self, import_status):
        """Sets the import_status of this LastAlertListInner.


        :param import_status: The import_status of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._import_status = import_status

    @property
    def msg_time(self):
        """Gets the msg_time of this LastAlertListInner.  # noqa: E501


        :return: The msg_time of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._msg_time

    @msg_time.setter
    def msg_time(self, msg_time):
        """Sets the msg_time of this LastAlertListInner.


        :param msg_time: The msg_time of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._msg_time = msg_time

    @property
    def latitude(self):
        """Gets the latitude of this LastAlertListInner.  # noqa: E501


        :return: The latitude of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this LastAlertListInner.


        :param latitude: The latitude of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this LastAlertListInner.  # noqa: E501


        :return: The longitude of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this LastAlertListInner.


        :param longitude: The longitude of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._longitude = longitude

    @property
    def co2(self):
        """Gets the co2 of this LastAlertListInner.  # noqa: E501


        :return: The co2 of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._co2

    @co2.setter
    def co2(self, co2):
        """Sets the co2 of this LastAlertListInner.


        :param co2: The co2 of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._co2 = co2

    @property
    def fuel_consumption(self):
        """Gets the fuel_consumption of this LastAlertListInner.  # noqa: E501


        :return: The fuel_consumption of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._fuel_consumption

    @fuel_consumption.setter
    def fuel_consumption(self, fuel_consumption):
        """Sets the fuel_consumption of this LastAlertListInner.


        :param fuel_consumption: The fuel_consumption of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._fuel_consumption = fuel_consumption

    @property
    def fuel_levels(self):
        """Gets the fuel_levels of this LastAlertListInner.  # noqa: E501


        :return: The fuel_levels of this LastAlertListInner.  # noqa: E501
        :rtype: list[float]
        """
        return self._fuel_levels

    @fuel_levels.setter
    def fuel_levels(self, fuel_levels):
        """Sets the fuel_levels of this LastAlertListInner.


        :param fuel_levels: The fuel_levels of this LastAlertListInner.  # noqa: E501
        :type: list[float]
        """

        self._fuel_levels = fuel_levels

    @property
    def aligned_fuel_levels(self):
        """Gets the aligned_fuel_levels of this LastAlertListInner.  # noqa: E501


        :return: The aligned_fuel_levels of this LastAlertListInner.  # noqa: E501
        :rtype: str
        """
        return self._aligned_fuel_levels

    @aligned_fuel_levels.setter
    def aligned_fuel_levels(self, aligned_fuel_levels):
        """Sets the aligned_fuel_levels of this LastAlertListInner.


        :param aligned_fuel_levels: The aligned_fuel_levels of this LastAlertListInner.  # noqa: E501
        :type: str
        """

        self._aligned_fuel_levels = aligned_fuel_levels

    @property
    def fuel_level(self):
        """Gets the fuel_level of this LastAlertListInner.  # noqa: E501


        :return: The fuel_level of this LastAlertListInner.  # noqa: E501
        :rtype: float
        """
        return self._fuel_level

    @fuel_level.setter
    def fuel_level(self, fuel_level):
        """Sets the fuel_level of this LastAlertListInner.


        :param fuel_level: The fuel_level of this LastAlertListInner.  # noqa: E501
        :type: float
        """

        self._fuel_level = fuel_level

    @property
    def vehicle_id(self):
        """Gets the vehicle_id of this LastAlertListInner.  # noqa: E501


        :return: The vehicle_id of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._vehicle_id

    @vehicle_id.setter
    def vehicle_id(self, vehicle_id):
        """Sets the vehicle_id of this LastAlertListInner.


        :param vehicle_id: The vehicle_id of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._vehicle_id = vehicle_id

    @property
    def vehicle(self):
        """Gets the vehicle of this LastAlertListInner.  # noqa: E501


        :return: The vehicle of this LastAlertListInner.  # noqa: E501
        :rtype: object
        """
        return self._vehicle

    @vehicle.setter
    def vehicle(self, vehicle):
        """Sets the vehicle of this LastAlertListInner.


        :param vehicle: The vehicle of this LastAlertListInner.  # noqa: E501
        :type: object
        """

        self._vehicle = vehicle

    @property
    def driver_id(self):
        """Gets the driver_id of this LastAlertListInner.  # noqa: E501


        :return: The driver_id of this LastAlertListInner.  # noqa: E501
        :rtype: int
        """
        return self._driver_id

    @driver_id.setter
    def driver_id(self, driver_id):
        """Sets the driver_id of this LastAlertListInner.


        :param driver_id: The driver_id of this LastAlertListInner.  # noqa: E501
        :type: int
        """

        self._driver_id = driver_id

    @property
    def is_day_off(self):
        """Gets the is_day_off of this LastAlertListInner.  # noqa: E501


        :return: The is_day_off of this LastAlertListInner.  # noqa: E501
        :rtype: bool
        """
        return self._is_day_off

    @is_day_off.setter
    def is_day_off(self, is_day_off):
        """Sets the is_day_off of this LastAlertListInner.


        :param is_day_off: The is_day_off of this LastAlertListInner.  # noqa: E501
        :type: bool
        """

        self._is_day_off = is_day_off

    @property
    def is_maintenance_enabled(self):
        """Gets the is_maintenance_enabled of this LastAlertListInner.  # noqa: E501


        :return: The is_maintenance_enabled of this LastAlertListInner.  # noqa: E501
        :rtype: bool
        """
        return self._is_maintenance_enabled

    @is_maintenance_enabled.setter
    def is_maintenance_enabled(self, is_maintenance_enabled):
        """Sets the is_maintenance_enabled of this LastAlertListInner.


        :param is_maintenance_enabled: The is_maintenance_enabled of this LastAlertListInner.  # noqa: E501
        :type: bool
        """

        self._is_maintenance_enabled = is_maintenance_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LastAlertListInner, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LastAlertListInner):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
